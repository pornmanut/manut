AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: Sam template for manut.dev

Resources:
  WebsiteOriginAccessControl:
    Type: AWS::CloudFront::OriginAccessControl
    Properties:
      OriginAccessControlConfig:
        Name: !Sub "${AWS::StackName}-origin-access-control"
        OriginAccessControlOriginType: s3
        SigningBehavior: always
        SigningProtocol: sigv4

  WebsiteCloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Enabled: true
        Aliases:
          - "manut.dev"
          - "*.manut.dev"
        ViewerCertificate:
          AcmCertificateArn: arn:aws:acm:us-east-1:668933070809:certificate/4992578c-fa73-47cf-8424-3bf7481517d6
          SslSupportMethod: sni-only
          MinimumProtocolVersion: TLSv1.2_2021
        Origins:
          - DomainName: !GetAtt StaticWebsiteBucket.RegionalDomainName
            Id: !Sub "${AWS::StackName}-S3-manut-origin"
            OriginAccessControlId: !Ref WebsiteOriginAccessControl
            S3OriginConfig: {}
        DefaultRootObject: index.html
        DefaultCacheBehavior:
          Compress: true
          TargetOriginId: !Sub "${AWS::StackName}-S3-manut-origin"
          AllowedMethods:
            - GET
            - HEAD
            - OPTIONS
          ForwardedValues:
            QueryString: false
            Cookies:
              Forward: none
          ViewerProtocolPolicy: redirect-to-https
          MaxTTL: 3600
          DefaultTTL: 3600
          MinTTL: 0
        PriceClass: PriceClass_100
        CustomErrorResponses:
          - ErrorCode: 404
            ResponseCode: 404
            ResponsePagePath: /404.html

  StaticWebsiteBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "${AWS::StackName}-static-website-bucket"
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        IgnorePublicAcls: true
        BlockPublicPolicy: true
        RestrictPublicBuckets: true

  StaticWebsiteBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref StaticWebsiteBucket
      PolicyDocument:
        Id: PolicyForCloudFrontPrivateContent
        Version: "2012-10-17"
        Statement:
          - Sid: AllowCloudFrontServicePrincipal
            Effect: "Allow"
            Principal:
              Service: cloudfront.amazonaws.com
            Action: "s3:GetObject"
            Resource:
              - !Sub "arn:aws:s3:::${AWS::StackName}-static-website-bucket/*"
            Condition:
              StringEquals:
                AWS:SourceArn: !Sub "arn:aws:cloudfront::${AWS::AccountId}:distribution/${WebsiteCloudFrontDistribution}"

Outputs:
  WebsiteCloudFrontDistribution:
    Description: "CloudFront distribution URL"
    Value: !GetAtt WebsiteCloudFrontDistribution.DomainName
  S3WebsiteEndpoint:
    Description: "S3 bucket URL"
    Value: !GetAtt StaticWebsiteBucket.WebsiteURL
